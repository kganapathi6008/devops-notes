---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mongo-pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mongo-pod-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mongo-pod-reader
subjects:
  - kind: ServiceAccount
    name: mongo-sa
    namespace: default

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast
provisioner: ebs.csi.aws.com
parameters:
  type: gp3
  fsType: ext4
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongo

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init-script
data:
  initiate-rs.sh: |
    #!/bin/bash
    sleep 10

    # Only run initiation on the first pod
    if [[ "$(hostname)" == "mongo-0" ]]; then
      echo "[INFO] Initiating replica set from mongo-0..."

      mongosh -u admin -p secret123 --authenticationDatabase admin --quiet <<EOF
    try {
      rs.initiate({
        _id: "rs0",
        members: [
          { _id: 0, host: "mongo-0.mongo:27017" },
          { _id: 1, host: "mongo-1.mongo:27017" },
          { _id: 2, host: "mongo-2.mongo:27017" }
        ]
      });
      print("Replica set initiated successfully.");
    } catch (e) {
      print("Replica set initiation skipped or failed: " + e);
    }
    EOF

    else
      echo "[INFO] Not mongo-0, skipping replica set initiation."
    fi


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 3
  selector:
    matchLabels:
      role: mongo
      environment: test
  template:
    metadata:
      labels:
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: mongo-sa
      containers:
        - name: mongo
          image: mongo:4.4
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip_all"
            - "--port"
            - "27017"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
            - name: init-script
              mountPath: /init-scripts
              readOnly: true
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "/init-scripts/initiate-rs.sh"]

        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar:latest
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test"

      volumes:
        - name: init-script
          configMap:
            name: mongo-init-script
            defaultMode: 0755

  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
      spec:
        storageClassName: "fast"
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
